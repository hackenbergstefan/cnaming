#!/usr/bin/env python
import argparse
import os
import sys

import cnaming
import cnaming.rules


cnaming.rules.load_builtin_rules()


def main():
    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('ruleset', help='''Ruleset to check against.
    Either file containing rules or name of contained ruleset.
    Contained rulesets: ''' + ', '.join('"{}"'.format(ruleset) for ruleset in cnaming.rules.rulesets.keys()))
    parser.add_argument('file', help='File to check.')
    args = parser.parse_args()

    # Get ruleset
    if os.path.exists(args.ruleset):
        locs = {}
        exec(open(args.ruleset).read(), {}, locs)
        ruleset = locs['ruleset']
    else:
        ruleset = cnaming.rules.rulesets[args.ruleset]

    # Check file
    result = cnaming.NamingCheck(ruleset).check(os.path.abspath(args.file))

    for res in result:
        print('{}:{}:"{}": {}'.format(
            res.node.location.line,
            res.node.location.column,
            str(res.node),
            str(res.rule) if isinstance(res, cnaming.NamingIssue) else 'No Rule matched',
        ))

    if len(result) > 0:
        sys.exit(1)


if __name__ == '__main__':
    main()
